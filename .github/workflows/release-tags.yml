name: Release Tags

on:
  push:
    tags:
      - "*"

jobs:
  mac-part:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: macos-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: "Set up Go"
        uses: actions/setup-go@v5
        with:
          check-latest: true
          go-version-file: go.mod

      - name: "Install dependencies"
        run: |
          go mod tidy
          brew install filosottile/musl-cross/musl-cross
          brew install upx

      - name: "Build"
        run: |
          bash scripts/build.sh linux arm64
          bash scripts/build.sh darwin arm64
          bash scripts/build.sh darwin amd64

      - name: "Release"
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          overwrite: true
          file_glob: true
          file: build/*

  linux-part:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: "Build Changelog"
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@v5
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          mode: "COMMIT"
          failOnError: true

      - name: "Set up Go"
        uses: actions/setup-go@v5
        with:
          check-latest: true
          go-version-file: go.mod

      - name: "Install dependencies"
        run: |
          sudo apt-get install -y \
                gcc-mingw-w64-x86-64 \
                gcc-multilib \
                musl-dev \
                musl-tools \
                bash \
                upx
          go mod tidy

      - name: "Install dependencies"
        run: go mod tidy

      - name: "Build"
        run: |
          bash scripts/build.sh linux amd64
          bash scripts/build.sh windows amd64

      # - name: echo changelog
      #   run: echo ${{steps.build_changelog.outputs.changelog}}

      - name: "Release"
        uses: softprops/action-gh-release@v1
        # if: startsWith(github.ref, 'refs/tags/')
        with:
          body: ${{steps.build_changelog.outputs.changelog}}
          fail_on_unmatched_files: true
          prerelease: false
          files: build/*

      # - name: info
      #   run: echo ${{ steps.Release.outputs.url }} ${{ steps.Release.outputs.upload_url }} ${{ steps.Release.outputs.id }}

